{"ast":null,"code":"var _jsxFileName = \"/Users/markbutcher/Desktop/not_toy_scene/monster_app/src/App.js\";\nimport React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list-componet';\nimport { SearchBox } from './components/search-box/search-box-component';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monster: [],\n      searchFeild: ''\n    };\n  } // API for monster profiles\n\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      monster: users\n    }));\n  }\n\n  handleChange(e) {\n    e => this.setState({\n      searchFeild: e.target.value\n    });\n  }\n\n  render() {\n    // function to handle search bar input to be letter sensitive, to what renders in CardList\n    const _this$state = this.state,\n          monster = _this$state.monster,\n          searchFeild = _this$state.searchFeild;\n    const filteredMonsters = monster.filter(monster => monster.name.toLowerCase().includes(searchFeild.toLowerCase()));\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(SearchBox, {\n      type: \"search\",\n      placeholder: \"search monsters\",\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(CardList, {\n      monster: filteredMonsters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/markbutcher/Desktop/not_toy_scene/monster_app/src/App.js"],"names":["React","Component","CardList","SearchBox","App","constructor","state","monster","searchFeild","componentDidMount","fetch","then","response","json","users","setState","handleChange","e","target","value","render","filteredMonsters","filter","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,2CAAzB;AACA,SAASC,SAAT,QAA0B,8CAA1B;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID,GARyB,CAU1B;;;AACAC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAER,MAAAA,OAAO,EAAEO;AAAX,KAAd,CAFf;AAGD;;AAEDE,EAAAA,YAAY,CAACC,CAAD,EAAI;AACdA,IAAAA,CAAC,IAAI,KAAKF,QAAL,CAAc;AAAEP,MAAAA,WAAW,EAAES,CAAC,CAACC,MAAF,CAASC;AAAxB,KAAd,CAAL;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP;AADO,wBAE0B,KAAKd,KAF/B;AAAA,UAECC,OAFD,eAECA,OAFD;AAAA,UAEUC,WAFV,eAEUA,WAFV;AAGP,UAAMa,gBAAgB,GAAGd,OAAO,CAACe,MAAR,CAAef,OAAO,IAC7CA,OAAO,CAACgB,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCjB,WAAW,CAACgB,WAAZ,EAApC,CADuB,CAAzB;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACA,MAAA,IAAI,EAAC,QADL;AAEA,MAAA,WAAW,EAAC,iBAFZ;AAGA,MAAA,YAAY,EAAE,KAAKR,YAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAEK,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAUD;;AApCyB;;AAuC5B,eAAejB,GAAf","sourcesContent":["import React, { Component }from 'react';\nimport { CardList } from './components/card-list/card-list-componet';\nimport { SearchBox } from './components/search-box/search-box-component';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monster: [],\n      searchFeild: ''\n    }\n  }\n\n  // API for monster profiles\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monster: users }))\n  }\n\n  handleChange(e) {\n    e => this.setState({ searchFeild: e.target.value})\n  }\n  \n  render() {\n    // function to handle search bar input to be letter sensitive, to what renders in CardList\n    const { monster, searchFeild } = this.state;\n    const filteredMonsters = monster.filter(monster => \n      monster.name.toLowerCase().includes(searchFeild.toLowerCase()))\n    return (\n      <div className=\"App\">\n        <SearchBox \n        type=\"search\"\n        placeholder=\"search monsters\"\n        handleChange={this.handleChange}\n        />\n        <CardList monster={filteredMonsters}/>\n     </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}